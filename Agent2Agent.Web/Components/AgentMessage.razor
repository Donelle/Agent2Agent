@using Microsoft.AspNetCore.Components
@using Markdig
@using Microsoft.AspNetCore.Components.Rendering
@inject IJSRuntime JS


<div class="thread-message thread-agent-message">
    <div class="thread-agent-message-content">
        <div class="agent-card">
            <div class="agent-card-header">
                <div class="agent-avatar">
                    <svg 
                        font-size="1.563em" 
                        aria-hidden="true" 
                        aria-label="Chat logo" 
                        fill="rgba(115, 118, 225, 1)" 
                        class="___12fm75w f1w7gpdv fez10in fg4l7m0" 
                        role="img" width="1em" height="1em" 
                        viewBox="0 0 20 20" 
                        xmlns="http://www.w3.org/2000/svg">
                        <path 
                            d="M7.4 12.8a1.04 1.04 0 0 0 1.59-.51l.45-1.37a2.34 2.34 0 0 1 1.47-1.48l1.4-.45A1.04 1.04 0 0 0 12.25 7l-1.37-.45A2.34 2.34 0 0 1 9.4 5.08L8.95 3.7a1.03 1.03 0 0 0-.82-.68 1.04 1.04 0 0 0-1.15.7l-.46 1.4a2.34 2.34 0 0 1-1.44 1.45L3.7 7a1.04 1.04 0 0 0 .02 1.97l1.37.45a2.33 2.33 0 0 1 1.48 1.48l.46 1.4c.07.2.2.37.38.5Zm6.14 4.05a.8.8 0 0 0 1.22-.4l.25-.76a1.09 1.09 0 0 1 .68-.68l.77-.25a.8.8 0 0 0-.02-1.52l-.77-.25a1.08 1.08 0 0 1-.68-.68l-.25-.77a.8.8 0 0 0-1.52.01l-.24.76a1.1 1.1 0 0 1-.67.68l-.77.25a.8.8 0 0 0 0 1.52l.77.25a1.09 1.09 0 0 1 .68.68l.25.77c.06.16.16.3.3.4Z" 
                            fill="rgba(115, 118, 225, 1)"></path>
                    </svg>
                </div>
                <button class="copy-icon" @onclick="CopyToClipboard">
                    <Icon Name="IconName.Clipboard" Size="IconSize.x5" Color="IconColor.None" />
                </button>
            </div>
            <div class="agent-card-body slide-in">
                @MarkdownFragment(MessageContent)
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public string MessageContent { get; set; } = string.Empty;
    private MarkdownPipeline _pipeline = default!;

    protected override async Task OnInitializedAsync()
	{
		_pipeline = new MarkdownPipelineBuilder().DisableHtml().UseAdvancedExtensions().Build();
		await base.OnInitializedAsync();
	}

    private void CopyToClipboard()
    {
        JS.InvokeVoidAsync("navigator.clipboard.writeText", MessageContent);
    }

    public RenderFragment MarkdownFragment(string input)
	{
		return (RenderTreeBuilder b) =>
		{
			Markdig.Blazor.Markdown.RenderToFragment(input, b, _pipeline);
		};
	}
}